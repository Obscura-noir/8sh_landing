"use client";
import { useState, useEffect } from "react";
import Image from "next/image";

const personas = {
  freelancer: {
    headline: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ —Å —É–º–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π",
    sub: "–ë—ã—Å—Ç—Ä–æ, –¥–µ—à–µ–≤–æ, –±–µ–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π. –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∑–∞ 30 —Å–µ–∫—É–Ω–¥!",
    cta: "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–∞",
    color: "bg-indigo-600",
  },
  business: {
    headline: "–ü–ª–∞—Ç–µ–∂–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞: –Ω–∞–¥–µ–∂–Ω–æ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ",
    sub: "–°—Ç–∞–±–∏–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è. –ü–æ–ª—É—á–∏—Ç–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é!",
    cta: "–°–æ–∑–¥–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞—è–≤–∫—É",
    color: "bg-green-600",
  },
  crypto: {
    headline: "DeFi –∏ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤",
    sub: "–°—Ç–∞–±–∏–ª—å–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å, –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ DeFi, –ø–æ–¥–±–æ—Ä –ª—É—á—à–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º.",
    cta: "–£–∑–Ω–∞—Ç—å –æ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω-–ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö",
    color: "bg-yellow-500",
  },
  general: {
    headline: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ —Å —É–º–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π",
    sub: "–°—Ä–∞–≤–Ω–∏—Ç–µ 50+ —Å–ø–æ—Å–æ–±–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∑–∞ 30 —Å–µ–∫—É–Ω–¥.",
    cta: "–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é",
    color: "bg-indigo-600",
  },
};

function detectPersona() {
  if (typeof window === "undefined") return "general";
  const url = new URL(window.location.href);
  const utm = url.searchParams.get("utm_source") || "";
  const ref = document.referrer || "";
  const campaign = url.searchParams.get("utm_campaign") || "";
  if (utm.includes("freelance") || /upwork|freelancer/i.test(ref)) return "freelancer";
  if (utm.includes("business") || navigator.language === "en") return "business";
  if (campaign.includes("crypto")) return "crypto";
  return "general";
}

export default function LandingPage() {
  const [persona, setPersona] = useState<keyof typeof personas>("general");
  const [showModal, setShowModal] = useState(false);
  const [showAuth, setShowAuth] = useState(false);
  const [authMode, setAuthMode] = useState<'login'|'register'>('login');
  useEffect(() => {
    setPersona(detectPersona() as keyof typeof personas);
  }, []);
  const p = personas[persona];

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –≤ Telegram (–∑–∞–≥–ª—É—à–∫–∞)
  async function sendToTelegram(data: { name: string; company: string; contact: string; comment: string }) {
    // TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π endpoint Telegram-–±–æ—Ç–∞
    await fetch("/api/send-corp-lead", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data),
    });
  }

  function handleCorporateClick() {
    setShowModal(true);
  }

  return (
    <div className="bg-gray-50 min-h-screen text-gray-900">
      {/* Header */}
      <header className="flex justify-between items-center px-6 py-4 max-w-7xl mx-auto">
        <div className="flex items-center gap-2 font-bold text-xl">
          <span className="text-indigo-600">8sh</span>
          <span className="text-gray-700">.ru</span>
        </div>
        <nav className="hidden md:flex gap-8 text-sm font-medium">
          <a href="#solutions" className="hover:text-indigo-600">–†–µ—à–µ–Ω–∏—è</a>
          <a href="#pricing" className="hover:text-indigo-600">–¢–∞—Ä–∏—Ñ—ã</a>
          <a href="#reviews" className="hover:text-indigo-600">–û—Ç–∑—ã–≤—ã</a>
          <a href="#faq" className="hover:text-indigo-600">FAQ</a>
          <a href="#contact" className="hover:text-indigo-600">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
        </nav>
        <a href="#" className="px-4 py-2 rounded-md border font-semibold text-indigo-600 border-indigo-600 hover:bg-indigo-50" onClick={e => {e.preventDefault(); setShowAuth(true); setAuthMode('login')}}>–í–æ–π—Ç–∏</a>
      </header>

      {/* Hero Section */}
      <section className="flex flex-col md:flex-row items-center justify-between max-w-7xl mx-auto px-6 py-12 gap-8">
        <div className="flex-1 flex flex-col gap-6">
          <h1 className="text-3xl md:text-5xl font-bold mb-2">{p.headline}</h1>
          <p className="text-lg md:text-2xl text-gray-700 mb-4">{p.sub}</p>
          <ul className="space-y-2 text-base md:text-lg">
            <li>‚úÖ –ö–æ–º–∏—Å—Å–∏–∏ –æ—Ç 0.5%</li>
            <li>‚úÖ –ü–µ—Ä–µ–≤–æ–¥—ã –æ—Ç 10 –º–∏–Ω—É—Ç</li>
            <li>‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–±–∏—Ä–∞–µ—Ç –ª—É—á—à–∏–π –º–∞—Ä—à—Ä—É—Ç</li>
            <li>‚úÖ 50+ –≤–∞–ª—é—Ç –∏ —Å–ø–æ—Å–æ–±–æ–≤</li>
          </ul>
          {p.cta === "–°–æ–∑–¥–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞—è–≤–∫—É" ? (
            <button className={`mt-6 px-6 py-3 rounded-lg text-white font-semibold text-lg shadow-lg transition ${p.color} hover:opacity-90`} onClick={handleCorporateClick}>{p.cta}</button>
          ) : (
            <button className={`mt-6 px-6 py-3 rounded-lg text-white font-semibold text-lg shadow-lg transition ${p.color} hover:opacity-90`}>{p.cta}</button>
          )}
          <div className="mt-4 text-gray-500 text-sm">üí¨ –£–∂–µ –ø–æ–º–æ–≥–ª–∏ 5,000+ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º ¬∑ ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê 4.8/5</div>
        </div>
        <div className="flex-1 flex flex-col items-center">
          {/* –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è/Smart Robot ‚Äî –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ SVG/–∫–∞—Ä—Ç–∏–Ω–∫—É */}
          <div className="w-64 h-64 bg-gradient-to-br from-indigo-100 to-green-100 rounded-full flex items-center justify-center mb-6">
            <span className="text-7xl">ü§ñ</span>
          </div>
          {/* –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä (stub/demo) */}
          <AICalculator />
        </div>
      </section>

      {/* Problem/Solution Section */}
      <section id="solutions" className="bg-white py-12 px-6 border-t border-gray-200">
        <div className="max-w-5xl mx-auto grid md:grid-cols-2 gap-8">
          <div>
            <h2 className="text-2xl font-bold mb-4">‚ùå –ó–Ω–∞–∫–æ–º–æ?</h2>
            <ul className="space-y-2 text-gray-700">
              <li>‚Ä¢ –ë–∞–Ω–∫ –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –Ω–µ–¥–µ–ª–∏</li>
              <li>‚Ä¢ –°–∫—Ä—ã—Ç—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ —Å—ä–µ–¥–∞—é—Ç 3-5% —Å—É–º–º—ã</li>
              <li>‚Ä¢ –ß–∞—Å–∞–º–∏ –∏—â–µ—Ç–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞</li>
              <li>‚Ä¢ –ë–æ–∏—Ç–µ—Å—å –ø–æ—Ç–µ—Ä—è—Ç—å –¥–µ–Ω—å–≥–∏ –∏–∑-–∑–∞ —Å–∞–Ω–∫—Ü–∏–π</li>
            </ul>
          </div>
          <div>
            <h2 className="text-2xl font-bold mb-4">‚úÖ 8sh —Ä–µ—à–∞–µ—Ç —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã:</h2>
            <ul className="space-y-2 text-gray-700">
              <li>‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Ö–æ–¥–∏—Ç —Å–∞–º—ã–π –≤—ã–≥–æ–¥–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –∑–∞ 30 —Å–µ–∫—É–Ω–¥</li>
              <li>‚Ä¢ –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–∏—Å—Å–∏–π</li>
              <li>‚Ä¢ –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º 4.5+</li>
              <li>‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—Å–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –≤–∞–ª—é—Ç–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞</li>
            </ul>
          </div>
        </div>
      </section>

      {/* Showcase Smart Features */}
      <section className="py-12 px-6 max-w-7xl mx-auto">
        <h2 className="text-2xl font-bold mb-8 text-center">ü§ñ Smart-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</h2>
        <div className="grid md:grid-cols-3 gap-8">
          <FeatureCard title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä" desc="–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ª—É—á—à–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø–µ—Ä–µ–≤–æ–¥–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏, —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏."/>
          <FeatureCard title="Smart Routing" desc="–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç 50+ —Å–ø–æ—Å–æ–±–æ–≤ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –≤–∞—à–µ–π –∑–∞–¥–∞—á–∏."/>
          <FeatureCard title="–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è" desc="–ö–æ–Ω—Ç–µ–Ω—Ç –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –ø–æ–¥ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ —Ü–µ–ª–∏."/>
        </div>
      </section>

      {/* Comparison Section */}
      <section id="pricing" className="bg-white py-12 px-6 border-t border-gray-200">
        <h2 className="text-2xl font-bold mb-8 text-center">üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏</h2>
        <div className="overflow-x-auto">
          <table className="min-w-full text-sm text-left border rounded-lg overflow-hidden">
            <thead className="bg-gray-100">
              <tr>
                <th className="px-4 py-2">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞</th>
                <th className="px-4 py-2">–ö–æ–º–∏—Å—Å–∏—è</th>
                <th className="px-4 py-2">–°–∫–æ—Ä–æ—Å—Ç—å</th>
                <th className="px-4 py-2">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</th>
                <th className="px-4 py-2">–û—Ç–∑—ã–≤—ã</th>
              </tr>
            </thead>
            <tbody>
              <tr className="border-t">
                <td className="px-4 py-2 font-semibold">8sh.ru</td>
                <td className="px-4 py-2 text-green-600 font-bold">–æ—Ç 0.5%</td>
                <td className="px-4 py-2">–æ—Ç 10 –º–∏–Ω—É—Ç</td>
                <td className="px-4 py-2">‚úÖ</td>
                <td className="px-4 py-2">4.8/5</td>
              </tr>
              <tr>
                <td className="px-4 py-2">RealPay</td>
                <td className="px-4 py-2">1.5-3%</td>
                <td className="px-4 py-2">1-7 –¥–Ω–µ–π</td>
                <td className="px-4 py-2">‚ùå</td>
                <td className="px-4 py-2">4.2/5</td>
              </tr>
              <tr>
                <td className="px-4 py-2">SWIFT</td>
                <td className="px-4 py-2">2-5%</td>
                <td className="px-4 py-2">2-10 –¥–Ω–µ–π</td>
                <td className="px-4 py-2">‚ùå</td>
                <td className="px-4 py-2">3.9/5</td>
              </tr>
            </tbody>
          </table>
        </div>
      </section>

      {/* Social Proof & Reviews */}
      <section id="reviews" className="py-12 px-6 max-w-7xl mx-auto">
        <h2 className="text-2xl font-bold mb-8 text-center">üèÜ –î–æ–≤–µ—Ä–∏–µ –∏ –æ—Ç–∑—ã–≤—ã</h2>
        <div className="grid md:grid-cols-3 gap-8">
          <ReviewCard name="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä" text="–ü–µ—Ä–µ–≤–æ–¥—ã —Å—Ç–∞–ª–∏ –±—ã—Å—Ç—Ä–µ–µ –∏ –¥–µ—à–µ–≤–ª–µ, —á–µ–º —á–µ—Ä–µ–∑ –±–∞–Ω–∫. –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç!"/>
          <ReviewCard name="–ï–ª–µ–Ω–∞, –¥–∏—Ä–µ–∫—Ç–æ—Ä" text="–î–ª—è –±–∏–∑–Ω–µ—Å–∞ ‚Äî –Ω–∞—Ö–æ–¥–∫–∞. –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, –Ω–∏–∫–∞–∫–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–∏—Å—Å–∏–π."/>
          <ReviewCard name="–ú–∞–∫—Å–∏–º, –∏–Ω–≤–µ—Å—Ç–æ—Ä" text="–ü–æ–¥–±–æ—Ä DeFi-–ø—Ä–æ–≥—Ä–∞–º–º ‚Äî —Ç–æ–ø! –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –≤—ã—à–µ, —á–µ–º –Ω–∞ –±–∏—Ä–∂–µ."/>
        </div>
      </section>

      {/* FAQ */}
      <section id="faq" className="bg-white py-12 px-6 border-t border-gray-200">
        <h2 className="text-2xl font-bold mb-8 text-center">‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
        <div className="max-w-3xl mx-auto space-y-4">
          <FAQItem q="–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä?" a="–û–Ω –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –ø–æ–¥–±–∏—Ä–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –ø–æ –∫–æ–º–∏—Å—Å–∏—è–º, —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏."/>
          <FAQItem q="–≠—Ç–æ –ª–µ–≥–∞–ª—å–Ω–æ?" a="–î–∞, –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –≤–∞–ª—é—Ç–Ω–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É –∏ –ø—Ä–æ—Ö–æ–¥—è—Ç compliance-–ø—Ä–æ–≤–µ—Ä–∫—É."/>
          <FAQItem q="–ö–∞–∫–∏–µ –≤–∞–ª—é—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è?" a="–ë–æ–ª–µ–µ 50 –≤–∞–ª—é—Ç, –≤–∫–ª—é—á–∞—è USD, EUR, CNY, USDT –∏ –¥—Ä."/>
        </div>
      </section>

      {/* Footer */}
      <footer className="py-8 text-center text-gray-400 text-sm border-t mt-8">¬© 2024 8sh.ru ‚Äî –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ —Å —É–º–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π</footer>

      <AuthModal open={showAuth} mode={authMode} onClose={() => setShowAuth(false)} onSwitchMode={m => setAuthMode(m)} />
      <CorporateModal open={showModal} onClose={() => setShowModal(false)} onSubmit={sendToTelegram} />
    </div>
  );
}

function AICalculator() {
  const [from, setFrom] = useState("–†–æ—Å—Å–∏—è");
  const [to, setTo] = useState("–ö–∏—Ç–∞–π");
  const [amount, setAmount] = useState(10000);
  const [currency, setCurrency] = useState("USD");
  // Stub recommendations
  const recs = [
    { label: "Crypto-bridge", fee: "0.8%", time: "15 –º–∏–Ω", result: 9920 },
    { label: "Bank Transfer", fee: "1.2%", time: "2 –¥–Ω—è", result: 9880 },
    { label: "Payment Agent", fee: "1.5%", time: "4 —á–∞—Å–∞", result: 9850 },
  ];
  return (
    <div className="bg-white rounded-xl shadow-lg p-6 w-full max-w-md">
      <h3 className="font-bold text-lg mb-4">üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–µ—Ä–µ–≤–æ–¥–∞</h3>
      <div className="flex flex-col gap-2 mb-4">
        <div className="flex gap-2">
          <input value={from} onChange={e => setFrom(e.target.value)} className="border rounded px-2 py-1 w-1/2" placeholder="–û—Ç–∫—É–¥–∞" />
          <input value={to} onChange={e => setTo(e.target.value)} className="border rounded px-2 py-1 w-1/2" placeholder="–ö—É–¥–∞" />
        </div>
        <div className="flex gap-2">
          <input type="number" value={amount} onChange={e => setAmount(Number(e.target.value))} className="border rounded px-2 py-1 w-1/2" placeholder="–°—É–º–º–∞" />
          <input value={currency} onChange={e => setCurrency(e.target.value)} className="border rounded px-2 py-1 w-1/2" placeholder="–í–∞–ª—é—Ç–∞" />
        </div>
      </div>
      <div className="text-gray-500 text-xs mb-2">ü§ñ –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç 50+ —Å–ø–æ—Å–æ–±–æ–≤...</div>
      <div className="bg-gray-50 rounded-lg p-3 mb-2">
        {recs.map((r, i) => (
          <div key={i} className="flex justify-between items-center py-1 text-sm">
            <span className="font-medium">{i === 0 ? 'ü•á' : i === 1 ? 'ü•à' : 'ü•â'} {r.label}</span>
            <span>{r.fee} ¬∑ {r.time} ¬∑ <span className="font-bold">${r.result.toLocaleString()}</span></span>
          </div>
        ))}
      </div>
      <div className="flex gap-2 mt-2">
        <button className="flex-1 px-3 py-2 rounded bg-indigo-600 text-white font-semibold hover:bg-indigo-700">–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É</button>
        <button className="flex-1 px-3 py-2 rounded border font-semibold hover:bg-gray-100">–°—Ä–∞–≤–Ω–∏—Ç—å –≤—Å–µ</button>
      </div>
    </div>
  );
}

function FeatureCard({ title, desc }: { title: string; desc: string }) {
  return (
    <div className="bg-white rounded-xl shadow p-6 flex flex-col gap-2">
      <h3 className="font-bold text-lg">{title}</h3>
      <p className="text-gray-600">{desc}</p>
    </div>
  );
}

function ReviewCard({ name, text }: { name: string; text: string }) {
  return (
    <div className="bg-white rounded-xl shadow p-6 flex flex-col gap-2">
      <div className="font-bold">{name}</div>
      <div className="text-gray-600">{text}</div>
    </div>
  );
}

function FAQItem({ q, a }: { q: string; a: string }) {
  const [open, setOpen] = useState(false);
  return (
    <div className="border rounded-lg p-4 bg-gray-50 cursor-pointer" onClick={() => setOpen(o => !o)}>
      <div className="font-semibold flex items-center justify-between">
        {q}
        <span>{open ? "-" : "+"}</span>
      </div>
      {open && <div className="mt-2 text-gray-700">{a}</div>}
    </div>
  );
}

function CorporateModal({ open, onClose, onSubmit }: { open: boolean; onClose: () => void; onSubmit: (data: { name: string; company: string; contact: string; comment: string }) => Promise<void> }) {
  const [name, setName] = useState("");
  const [company, setCompany] = useState("");
  const [contact, setContact] = useState("");
  const [comment, setComment] = useState("");
  const [loading, setLoading] = useState(false);
  const [success, setSuccess] = useState(false);
  const [error, setError] = useState("");

  async function handleSubmit(e: React.FormEvent) {
    e.preventDefault();
    setLoading(true);
    setError("");
    try {
      await onSubmit({ name, company, contact, comment });
      setSuccess(true);
      setName(""); setCompany(""); setContact(""); setComment("");
    } catch {
      setError("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    } finally {
      setLoading(false);
    }
  }

  if (!open) return null;
  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/40">
      <div className="bg-white rounded-xl shadow-lg p-8 w-full max-w-md relative">
        <button className="absolute top-3 right-3 text-gray-400 hover:text-gray-600 text-2xl" onClick={onClose}>&times;</button>
        <h2 className="text-xl font-bold mb-4">–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ</h2>
        {success ? (
          <div className="text-green-600 font-semibold text-center py-8">–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.</div>
        ) : (
          <form className="flex flex-col gap-4" onSubmit={handleSubmit}>
            <input required value={name} onChange={e => setName(e.target.value)} className="border rounded px-3 py-2" placeholder="–§–∞–º–∏–ª–∏—è –ò–º—è" />
            <input required value={company} onChange={e => setCompany(e.target.value)} className="border rounded px-3 py-2" placeholder="–ö–æ–º–ø–∞–Ω–∏—è" />
            <input required value={contact} onChange={e => setContact(e.target.value)} className="border rounded px-3 py-2" placeholder="Telegram –∏–ª–∏ email" />
            <textarea value={comment} onChange={e => setComment(e.target.value)} className="border rounded px-3 py-2" placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" rows={3} />
            {error && <div className="text-red-600 text-sm">{error}</div>}
            <button type="submit" className="bg-indigo-600 text-white rounded px-4 py-2 font-semibold hover:bg-indigo-700 transition disabled:opacity-60" disabled={loading}>{loading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"}</button>
          </form>
        )}
      </div>
    </div>
  );
}

function AuthModal({ open, mode, onClose, onSwitchMode }: { open: boolean; mode: 'login'|'register'; onClose: () => void; onSwitchMode: (m: 'login'|'register') => void }) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [name, setName] = useState("");
  const [company, setCompany] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");
  const [success, setSuccess] = useState(false);

  // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
  useEffect(() => {
    if (open) {
      setSuccess(false);
      setError("");
      setEmail("");
      setPassword("");
      setName("");
      setCompany("");
    }
  }, [open, mode]);

  async function handleSubmit(e: React.FormEvent) {
    e.preventDefault();
    setLoading(true);
    setError("");
    setSuccess(false);
    try {
      const body: any = { email, password, mode };
      if (mode === 'register') {
        body.name = name;
        body.company = company;
      }
      const res = await fetch("/api/auth", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });
      const data = await res.json();
      if (data.ok) {
        if (mode === 'login') {
          setSuccess(true);
          setTimeout(() => { onClose(); window.open('/profile', '_blank'); }, 1000);
        } else {
          setSuccess(true);
        }
        setEmail(""); setPassword(""); setName(""); setCompany("");
      } else {
        setError(data.error || "–û—à–∏–±–∫–∞");
      }
    } catch {
      setError("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏");
    } finally {
      setLoading(false);
    }
  }

  if (!open) return null;
  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/40">
      <div className="bg-white rounded-xl shadow-lg flex w-full max-w-2xl relative">
        <button className="absolute top-3 right-3 text-gray-400 hover:text-gray-600 text-2xl" onClick={onClose}>&times;</button>
        <div className="flex-1 hidden md:flex items-center justify-center bg-gray-100 rounded-l-xl">
          <Image src="/login-demo.png" alt="Demo" width={320} height={320} className="object-contain" />
        </div>
        <div className="flex-1 flex flex-col justify-center p-8">
          <h2 className="text-xl font-bold mb-4 text-center">{mode === 'login' ? '–í–æ–π—Ç–∏' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}</h2>
          {success ? (
            <div className="text-green-600 font-semibold text-center py-8">–£—Å–ø–µ—à–Ω–æ!</div>
          ) : (
            <form className="flex flex-col gap-4" onSubmit={handleSubmit}>
              <input required type="email" value={email} onChange={e => setEmail(e.target.value)} className="border rounded px-3 py-2" placeholder="Email" />
              <input required type="password" value={password} onChange={e => setPassword(e.target.value)} className="border rounded px-3 py-2" placeholder="–ü–∞—Ä–æ–ª—å" />
              {mode === 'register' && (
                <>
                  <input required value={name} onChange={e => setName(e.target.value)} className="border rounded px-3 py-2" placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" />
                  <input required value={company} onChange={e => setCompany(e.target.value)} className="border rounded px-3 py-2" placeholder="–ö–æ–º–ø–∞–Ω–∏—è" />
                </>
              )}
              {error && <div className="text-red-600 text-sm">{error}</div>}
              <button type="submit" className="bg-indigo-600 text-white rounded px-4 py-2 font-semibold hover:bg-indigo-700 transition disabled:opacity-60" disabled={loading}>{loading ? (mode === 'login' ? '–í—Ö–æ–¥...' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...') : (mode === 'login' ? '–í–æ–π—Ç–∏' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')}</button>
            </form>
          )}
          <div className="mt-4 text-center text-sm">
            {mode === 'login' ? (
              <>
                –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <button className="underline text-indigo-600" onClick={() => onSwitchMode('register')}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
              </>
            ) : (
              <>
                –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <button className="underline text-indigo-600" onClick={() => onSwitchMode('login')}>–í–æ–π—Ç–∏</button>
              </>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
